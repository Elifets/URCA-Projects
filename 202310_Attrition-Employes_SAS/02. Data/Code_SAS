/* Bibliothèque */
%let dossier = M2_SAS/Projet;

/*  Précisez dans quel dossier de votre acceuil se trouve les données */
%let path=~/&dossier.;
libname mylab "&path";

/* ------------------------------------------- | Importation des données | ------------------------------------------- */

proc import datafile='/home/u62439365/M2_SAS/Projet/employee_survey_data.csv' out=mylab.Data1 
		dbms=csv replace;
	delimiter=';';
run;

proc import datafile='/home/u62439365/M2_SAS/Projet/general_data.csv' out=mylab.Data2 dbms=csv 
		replace;
	delimiter=';';
run;

/* Jointure des deux tables */
proc sql;
	create table mylab.Data as select *
	from mylab.Data1 as a
	inner join mylab.Data2 as b on a.EmployeeID=b.EmployeeID;
quit;
run;


/* -------------------------------------- | Traitement des données/nettoyage | -------------------------------------- */

/* On enlève les variables que nous allons pas utiliser et on change le nom de la variable envsat d'un nom plus explicite */
/* Puis on remplace les variables NA en valeurs manquantes numériques car on change le format de la variable */
data mylab.Data (drop=envsat Over18 StandardHours EmployeeCount);
	set mylab.Data (rename=(EnvironmentSatisfaction=envsat));

	if envsat="NA" then
		envsat=".";
	EnvironmentSatisfaction=input(envsat, 2.);
run;

/* Pour chaque individu s'il y a une valeur manquante numérique dans une variable, on enlève complètement cet individu de la base */
/* Fonction macro qui fait ça */
%macro supp(var=);
	data mylab.Data;
		set mylab.Data;

		if &var='.' then
			delete;
	run;

%mend;

/* On applique la fonction macro sur les variables */ 
%supp(var=NumCompaniesWorked);
%supp(var=TotalWorkingYears);
%supp(var=JobSatisfaction);
%supp(var=WorkLifeBalance);
%supp(var=EnvironmentSatisfaction);

/* On prépare les variables en les classant dans des macro variables */

/* Variable cible */
%let Y=Attrition;

/* Variables explcatives catégorielles */
%let XC= Gender EducationField JobRole MaritalStatus Department BusinessTravel; 

/* Variables explcatives numérique */
%let XN= Age DistanceFromHome Education JobLevel JobSatisfaction MonthlyIncome NumCompaniesWorked PercentSalaryHike StockOptionLevel TotalWorkingYears TrainingTimesLastYear WorkLifeBalance YearsAtCompany YearsSinceLastPromotion YearsWithCurrManager EnvironmentSatisfaction ; 

/* Pré-création du modèle pour que lors de la proc soit plus lisible */
%let Model = &Y(event="Yes")=&XC. &XN.; 

/* Lister les variables catégorielles et leur donner une référence pour l'analyse */
%let cat = EducationField(ref="Human Resourc") Gender JobRole(ref="Research Director") MaritalStatus Department BusinessTravel(ref="Travel_Frequently"); 


/* ------------------------------------------- | Exploration des données | ------------------------------------------- */

proc means data=mylab.Data;
	var _numeric_;
run;

proc freq data=mylab.Data;
	table _character_;
run;

/* ------------------------------------------- | Régression logistique | ------------------------------------------- */

ods graphics on;

proc logistic data=mylab.Data alpha=0.05 plots=(oddsratio);
	class &cat; / param=ref; /* Spécifier les variables catégorielles */
	model &Model. /clodds=pl LACKFIT
	/* Sélection des variables */
	selection=BIC slentry=0.05;
run;

/* Vérification de multcolinéarité */
proc corr data=mylab.Data;
	var &XN.;
run;
/* Aucune multcolinéarité n'est observée, nous pouvons avancer sur l'analyse sans crainte */

/* -------------------------------------------- | Analyse supplémentaire | -------------------------------------------- */

/*Graphe croisé entre les domaines de formation et l'attrition des employés  */
proc freq data=mylab.data;
	table EducationField*Attrition/ plots=freqplot(type=bar) outpct 
		out=freq_Edu_Att;
run;

proc sgplot data=freq_Edu_Att;
	vbar EducationField / response=PCT_ROW group=Attrition datalabel;
	yaxis grid;
run;

/*Graphe croisé entre les domaines de formation et l'attrition des employés  */
proc freq data=mylab.data;
	table EducationField*Attrition/ plots=freqplot(type=bar) outpct 
		out=freq_Edu_Att;
run;

proc sgplot data=freq_Edu_Att;
	vbar EducationField / response=PCT_ROW group=Attrition datalabel;
	yaxis grid;
run;

/*graphes en plus*/

/*voyages en fonction de attrition*/

PROC GCHART DATA = mylab.Data ;
  VBAR attrition / DISCRETE GROUP = businesstravel ;
RUN ;

/*pro/perso*/

PROC GCHART DATA = mylab.Data ;
  VBAR attrition / DISCRETE GROUP = maritalstatus ;
RUN ;

/*environnement de travail*/

PROC GCHART DATA = mylab.Data ;
  VBAR attrition / DISCRETE GROUP = environmentsatisfaction ;
RUN ;

/*rotation des managers*/

proc freq data=mylab.data;
	table yearswithcurrmanager*Attrition/ plots=freqplot(type=bar) outpct 
		out=freq_Edu_Att;
run;

proc sgplot data=freq_Edu_Att;
	vbar yearswithcurrmanager / response=PCT_ROW group=Attrition datalabel;
	yaxis grid;
run;

/*last promotion*/

proc freq data=mylab.data;
	table yearssincelastpromotion*Attrition/ plots=freqplot(type=bar) outpct 
		out=freq_Edu_Att;
run;

proc sgplot data=freq_Edu_Att;
	vbar yearssincelastpromotion / response=PCT_ROW group=Attrition datalabel;
	yaxis grid;
run;


/*mercenaires*/

proc freq data=mylab.data;
	table numcompaniesworked*Attrition/ plots=freqplot(type=bar) outpct 
		out=freq_Edu_Att;
run;

proc sgplot data=freq_Edu_Att;
	vbar numcompaniesworked / response=PCT_ROW group=Attrition datalabel;
	yaxis grid;
run;

ods graphics off;
